DROP TABLE IF EXISTS OLYMPICS_HISTORY;
CREATE TABLE IF NOT EXISTS OLYMPICS_HISTORY
(
    id          INT,
    name        VARCHAR,
    sex         VARCHAR,
    age         VARCHAR,
    height      VARCHAR,
    weight      VARCHAR,
    team        VARCHAR,
    noc         VARCHAR,
    games       VARCHAR,
    year        INT,
    season      VARCHAR,
    city        VARCHAR,
    sport       VARCHAR,
    event       VARCHAR,
    medal       VARCHAR
);

DROP TABLE IF EXISTS OLYMPICS_HISTORY_NOC_REGIONS;
CREATE TABLE IF NOT EXISTS OLYMPICS_HISTORY_NOC_REGIONS
(
    noc         VARCHAR,
    region      VARCHAR,
    notes       VARCHAR
);

select * from OLYMPICS_HISTORY;
select * from OLYMPICS_HISTORY_NOC_REGIONS;


--1. How many olympics games have been held?

select count(distinct games) as total_olympics_games
from OLYMPICS_HISTORY

--2. List down all Olympics games held so far.

select distinct year, season, city
from OLYMPICS_HISTORY

--3. Mention the total no of nations who participated in each olympics game?

select a.games, count(distinct b.region)
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
group by 1
order by 1

--4. Which year saw the highest and lowest no of countries participating in olympics

with cte as (
(select a.games, count(distinct b.region) as participation
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
group by 1
order by 1
limit 1)
union 
(select a.games, count(distinct b.region) as participation
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
group by 1
order by 1 desc
limit 1)
)

select distinct concat(first_value(games) over(order by participation), ' - ', 
			  first_value(participation) over(order by participation)) as lowest_participation,
	   concat(first_value(games) over(order by participation desc), ' - ', 
			  first_value(participation) over(order by participation desc)) as highest_participation
from cte

--5. Which nation has participated in all of the olympic games

with cte as (
select b.region, count(distinct a.games) as tot_participated_games
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
group by 1
order by 2 desc )

,df as (
select count(distinct games) as total_olympics_games
from OLYMPICS_HISTORY
)

select cte.region, cte.tot_participated_games
from cte
join df on cte.tot_participated_games = df.total_olympics_games

--6. Identify the sport which was played in all summer olympics.

with cte as (
select sport, count(distinct games) as no_of_games
from OLYMPICS_HISTORY
where season = 'Summer'
group by 1
order by 2 desc
)
, df as (
select count(distinct games) as total_games
from OLYMPICS_HISTORY
where season = 'Summer'
)
select sport, no_of_games, total_games
from cte
join df on cte.no_of_games = df.total_games

--7. Which Sports were just played only once in all the olympics.

with cte as (
select distinct games, sport
from OLYMPICS_HISTORY
order by 1
)
,df as (
select sport, count(games) played_once
from cte
group by 1
)
select df.*, cte.games
from cte
join df on cte.sport = df.sport
where df.played_once <= 1
order by 1

--8. Fetch the total no of sports played in each olympic games.

with a1 as (
select distinct games, sport
from OLYMPICS_HISTORY
order by 1
)

select games, count(distinct sport) as no_of_sports
from a1
group by 1
order by 2 desc

--9. Fetch oldest athletes to win a gold medal

with cte as (
select name, sex, cast(case when age = 'NA' then '0' else age end as int) as age, team, games, city, sport, event, medal
from OLYMPICS_HISTORY
where medal = 'Gold'
),
ranking as (
select *, rank() over(order by age desc) as rnk
from cte
)
select *
from ranking
where rnk = 1

--10. Find the Ratio of male and female athletes participated in all olympic games.

with t1 as
        	(select sex, count(1) as cnt
        	from olympics_history
        	group by sex),
        t2 as
        	(select *, row_number() over(order by cnt) as rn
        	 from t1),
        min_cnt as
        	(select cnt from t2	where rn = 1),
        max_cnt as
        	(select cnt from t2	where rn = 2)
    select concat('1 : ', round(max_cnt.cnt::decimal/min_cnt.cnt, 2)) as ratio
    from min_cnt, max_cnt;
	
--11. Fetch the top 5 athletes who have won the most gold medals.

with cte as (
select name, team, count(medal) as medals_won
from OLYMPICS_HISTORY
where medal = 'Gold'
group by 1,2
order by 3 desc
)
,df as (
select *, dense_rank() over(order by medals_won desc) as rnk
from cte
)
select * from df
where rnk <= 5

--12. Fetch the top 5 athletes who have won the most medals (gold/silver/bronze).

with cte as (
select name, team, count(medal) as medals_won
from OLYMPICS_HISTORY
where medal != 'NA'
group by 1,2
order by 3 desc
)
,df as (
select *, dense_rank() over(order by medals_won desc) as rnk
from cte
)
select * from df
where rnk <= 5

--13. Fetch the top 5 most successful countries in olympics. Success is defined by no of medals won.

with cte as (
select b.region, count(a.medal) as medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
where medal != 'NA'
group by 1
order by 2 desc
)
,df as (
select *, dense_rank() over(order by medals desc) as rnk
from cte
)
select * from df
where rnk <= 5

--14. List down total gold, silver and bronze medals won by each country.

with cte as (
select b.region,
case when a.medal = 'Gold' then 'G' else null end as gold_medals,
case when a.medal = 'Silver' then 'S' else null end as silver_medals,
case when a.medal = 'Bronze' then 'B' else null end as bronze_medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
)
select region, count(gold_medals), count(silver_medals), count(bronze_medals)
from cte
group by 1
order by 2 desc

--15. List down total gold, silver and bronze medals won by each country corresponding to each olympic games.

with cte as (
select b.region, a.games,
case when a.medal = 'Gold' then 'G' else null end as gold_medals,
case when a.medal = 'Silver' then 'S' else null end as silver_medals,
case when a.medal = 'Bronze' then 'B' else null end as bronze_medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
)
select region, games, count(gold_medals), count(silver_medals), count(bronze_medals)
from cte
group by 1,2
order by 2,1

--16. Identify which country won the most gold, most silver and most bronze medals in each olympic games.

with cte as (
select b.region, a.games,
case when a.medal = 'Gold' then 'G' else null end as gold_medals,
case when a.medal = 'Silver' then 'S' else null end as silver_medals,
case when a.medal = 'Bronze' then 'B' else null end as bronze_medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc 
order by 2,1
)
, df as (
select games, region,
count(gold_medals) over(partition by games, region order by gold_medals desc) as a,
count(silver_medals) over(partition by games, region order by silver_medals desc)as b,
count(bronze_medals) over(partition by games, region order by bronze_medals desc) as c
from cte
order by 1
)

select distinct games, 
concat(first_value(region) over(partition by games order by a desc), 
	   ' - ', 
	   max(a) over(partition by games order by a desc)) as gold,
concat(first_value(region) over(partition by games order by b desc), 
	   ' - ', 
	   max(b) over(partition by games order by b desc)) as silver,
concat(first_value(region) over(partition by games order by c desc), 
	   ' - ', 
	   max(c) over(partition by games order by c desc)) as bronze
from df
order by 1

--17. Identify which country won the most gold, most silver, most bronze medals and the most medals in each olympic games.

with cte as (
select a.games, b.region,
sum(case when a.medal = 'Gold' then 1 else 0 end) as gold_medals,
sum(case when a.medal = 'Silver' then 1 else 0 end) as silver_medals,
sum(case when a.medal = 'Bronze' then 1 else 0 end) as bronze_medals,
sum(case when a.medal != 'NA' then 1 else 0 end) as tot_medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
group by 1,2
order by 1
)
select distinct games,
concat(first_value(region) over(partition by games order by gold_medals desc),
	  ' - ',
	  max(gold_medals) over(partition by games order by gold_medals desc)) as max_gold,
concat(first_value(region) over(partition by games order by silver_medals desc),
	  ' - ',
	  max(silver_medals) over(partition by games order by silver_medals desc)) as max_silver,
concat(first_value(region) over(partition by games order by bronze_medals desc),
	  ' - ',
	  max(bronze_medals) over(partition by games order by bronze_medals desc)) as max_bronze,
concat(first_value(region) over(partition by games order by tot_medals desc),
	  ' - ',
	  max(tot_medals) over(partition by games order by tot_medals desc)) as max_medals
from cte
order by 1

--18. Which countries have never won gold medal but have won silver/bronze medals?

with cte as (
select b.region,
sum(case when medal = 'Gold' then 1 else 0 end) as no_gold,
sum(case when medal = 'Silver' then 1 else 0 end) as silver,
sum(case when medal = 'Bronze' then 1 else 0 end) as bronze
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
group by 1
)
,df as (
select *
from cte
where no_gold = 0
) 
select * from df
order by 2 desc, 3 desc

--19. In which Sport/event, India has won highest medals.

select b.region, a.sport, count(a.medal) as tot_medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
where medal != 'NA' and region = 'India'
group by 1,2
order by 3 desc
limit 1

--20. Break down all olympic games where India won medal for Hockey and how many medals in each olympic games

select distinct a.games, b.region, count(medal) as tot_medals
from OLYMPICS_HISTORY as a
join OLYMPICS_HISTORY_NOC_REGIONS as b on a.noc = b.noc
where medal != 'NA' and sport = 'Hockey' and region = 'India'
group by 1,2
order by 3 desc
